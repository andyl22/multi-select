{"version":3,"sources":["components/PicklistItem.js","components/PicklistContainer.js","components/PicklistSearchInput.js","components/MultiSelectContainer.js","App.js","index.js"],"names":["PicklistItem","props","str","className","onClick","toggleCheck","type","value","name","defaultChecked","checked","htmlFor","replace","c","toUpperCase","PicklistContainer","setChecked","findOrAddCheckedItem","e","includes","target","filter","x","console","log","picklistOptions","map","option","PicklistSearchInput","useState","setValue","toggleExpand","expanded","setExpand","placeholder","onChange","onKeyUp","searchInput","filteredOptions","text","setPicklistOptions","MultiSelectContainer","setExpanded","originalPicklistData","setOriginalPicklistData","picklistRef","useRef","useEffect","fetchData","then","data","catch","err","a","fetch","res","json","category_list","category","document","addEventListener","current","contains","ref","isExpanded","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"+NAoBeA,MAlBf,SAAsBC,GACpB,IAAoBC,EAIpB,OACE,sBAAKC,UAAU,gBAAgBC,QAASH,EAAMI,YAA9C,UACE,uBACEC,KAAK,WACLC,MAAON,EAAMM,MACbC,KAAMP,EAAMM,MACZE,eAAgBR,EAAMS,UAExB,uBAAOC,QAASV,EAAMM,MAAtB,UAZgBL,EAYyBD,EAAMM,MAX1CL,EAAIU,QAAQ,OAAO,SAACC,GAAD,OAAOA,EAAEC,wBCyBxBC,MA1Bf,SAA2Bd,GACzB,IAAQS,EAAwBT,EAAxBS,QAASM,EAAef,EAAfe,WAEXC,EAAuB,SAACC,GACxBR,EAAQS,SAASD,EAAEE,OAAOb,OAC5BS,EAAWN,EAAQW,QAAO,SAACC,GAAD,OAAOA,IAAMJ,EAAEE,OAAOb,UAEhDS,EAAW,GAAD,mBAAKN,GAAL,CAAcQ,EAAEE,OAAOb,UAgBrC,OAAO,qBAAKJ,UAAU,qBAAf,UAXLoB,QAAQC,IAAIvB,EAAMwB,iBACXxB,EAAMwB,gBAAgBC,KAAI,SAACC,GAAD,OAC/B,cAAC,EAAD,CAEEpB,MAAOoB,EACPtB,YAAaY,EACbP,QAASA,EAAQS,SAASQ,IAHrBA,UCqBEC,MArCf,SAA6B3B,GAC3B,MAA0B4B,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcuB,EAAd,KAEA,SAASC,IACH9B,EAAM+B,UACR/B,EAAMgC,WAAU,GAiBpB,OACE,qBAAK9B,UAAU,kCAAf,SACE,uBACEG,KAAK,OACLH,UAAU,iBACVI,MAASA,EACT2B,YAAY,mBACZC,SAXN,SAAsBjB,GACpBY,EAASZ,EAAEE,OAAOb,QAWdH,QAAS2B,EACTK,QAtBN,SAAoBlB,GAClBa,IACA,IAAMM,EAAcnB,EAAEE,OAAOb,MACvB+B,EAAkBrC,EAAMwB,gBAAgBJ,QAAO,SAACkB,GAAD,OACnDA,EAAKpB,SAASkB,MAEhBpC,EAAMuC,mBAAmBF,SCuCdG,MApDf,WACE,MAAgCZ,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBU,EAAjB,KACA,EAA8Bb,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgBM,EAAhB,KACA,EAAwDa,mBAAS,IAAjE,mBAAOc,EAAP,KAA6BC,EAA7B,KACA,EAA8Cf,mBAAS,IAAvD,mBAAOJ,EAAP,KAAwBe,EAAxB,KACMK,EAAcC,mBAEpBC,qBAAU,WACRC,IACGC,MAAK,SAAAC,GACJN,EAAwBM,GACxBV,EAAmBU,MAEpBC,OAAM,SAAAC,GAAG,OAAI7B,QAAQC,IAAI4B,QAC5B,IAEH,IAAMJ,EAAS,uCAAG,8BAAAK,EAAA,sEACEC,MAAM,wCADR,cACVC,EADU,gBAECA,EAAIC,OAFL,cAGhBN,GADIA,EAFY,QAGJO,cAAc/B,KAAI,SAAAgC,GAAQ,OAAIA,EAASlD,QAHnC,kBAIT0C,GAJS,2CAAH,qDAed,OARAH,qBAAU,WACRY,SAASC,iBAAiB,aAAa,SAAC1C,GACjC2B,EAAYgB,QAAQC,SAAS5C,EAAEE,SAClCsB,GAAY,SAMhB,sBAAKvC,UAAU,yBAAyB4D,IAAKlB,EAA7C,UACE,8BAAMnC,IACN,cAAC,EAAD,CACEsD,WAAYhC,EACZC,UAAWS,EACXjB,gBAAiBkB,EACjBH,mBAAoBA,EACpBR,SAAUA,IAEXA,EACC,cAAC,EAAD,CACEtB,QAASA,EACTM,WAAYA,EACZS,gBAAiBA,IAEjB,SCxCKwC,MARf,WACE,OACE,qBAAK9D,UAAU,MAAf,SACE,cAAC,EAAD,OCFN+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFT,SAASU,eAAe,W","file":"static/js/main.ca372575.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction PicklistItem(props) {\n  const capitalize = (str) => {\n    return str.replace(/^\\w/, (c) => c.toUpperCase());\n  };\n\n  return (\n    <div className=\"picklist-item\" onClick={props.toggleCheck}>\n      <input\n        type=\"checkbox\"\n        value={props.value}\n        name={props.value}\n        defaultChecked={props.checked}\n      />\n      <label htmlFor={props.value}>{capitalize(props.value)}</label>\n    </div>\n  );\n}\n\nexport default PicklistItem;\n","import React from \"react\";\nimport PicklistItem from \"./PicklistItem\";\n\nfunction PicklistContainer(props) {\n  const { checked, setChecked } = props;\n\n  const findOrAddCheckedItem = (e) => {\n    if (checked.includes(e.target.value)) {\n      setChecked(checked.filter((x) => x !== e.target.value));\n    } else {\n      setChecked([...checked, e.target.value]);\n    }\n  };\n\n  const renderPicklistOptions = () => {\n    console.log(props.picklistOptions);\n    return props.picklistOptions.map((option) => (\n      <PicklistItem\n        key={option}\n        value={option}\n        toggleCheck={findOrAddCheckedItem}\n        checked={checked.includes(option)}\n      />\n    ));\n  };\n\n  return <div className=\"picklist-container\">{renderPicklistOptions()}</div>;\n}\n\nexport default PicklistContainer;\n","import React, { useState } from \"react\";\n\nfunction PicklistSearchInput(props) {\n  const [value, setValue] = useState('');\n\n  function toggleExpand() {\n    if(!props.expanded) {\n      props.setExpand(true);\n    }\n  }\n\n  function filterList(e) {\n    toggleExpand();\n    const searchInput = e.target.value;\n    const filteredOptions = props.picklistOptions.filter((text) =>\n      text.includes(searchInput)\n    );\n    props.setPicklistOptions(filteredOptions);\n  }\n\n  function handleChange(e) {\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className=\"picklist-search-input-container\">\n      <input\n        type=\"text\"\n        className=\"picklist-input\"\n        value = {value}\n        placeholder=\"Choose Option(s)\"\n        onChange={handleChange}\n        onClick={toggleExpand}\n        onKeyUp={filterList}\n      />\n    </div>\n  );\n}\n\nexport default PicklistSearchInput;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PicklistContainer from \"./PicklistContainer\";\nimport PicklistSearchInput from \"./PicklistSearchInput\";\n\nfunction MultiSelectContainer() {\n  const [expanded, setExpanded] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [originalPicklistData, setOriginalPicklistData] = useState([]);\n  const [picklistOptions, setPicklistOptions] = useState([]);\n  const picklistRef = useRef();\n\n  useEffect(() => {\n    fetchData()\n      .then(data => {\n        setOriginalPicklistData(data)\n        setPicklistOptions(data)\n      })\n      .catch(err => console.log(err))\n  },[]);\n\n const fetchData = async () => {\n   const res = await fetch('http://localhost:3000/categories/api')\n   let data = await res.json();\n   data = data.category_list.map(category => category.name);\n   return data;\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", (e) => {\n      if (!picklistRef.current.contains(e.target)) {\n        setExpanded(false);\n      }\n    });\n  });\n\n  return (\n    <div className=\"multi-select-container\" ref={picklistRef}>\n      <div>{checked}</div>\n      <PicklistSearchInput\n        isExpanded={expanded}\n        setExpand={setExpanded}\n        picklistOptions={originalPicklistData}\n        setPicklistOptions={setPicklistOptions}\n        expanded={expanded}\n      />\n      {expanded ? (\n        <PicklistContainer\n          checked={checked}\n          setChecked={setChecked}\n          picklistOptions={picklistOptions}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default MultiSelectContainer;\n","import \"./App.scss\";\nimport MultiSelectContainer from \"./components/MultiSelectContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MultiSelectContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}