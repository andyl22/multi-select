{"version":3,"sources":["components/PicklistItem.js","components/PicklistContainer.js","components/PicklistSearchInput.js","components/MultiSelectContainer.js","App.js","index.js"],"names":["PicklistItem","props","str","className","onClick","toggleCheck","type","value","name","defaultChecked","checked","id","replace","c","toUpperCase","PicklistContainer","setChecked","findOrAddCheckedItem","e","console","log","target","classList","includes","parentNode","targetValue","firstChild","filter","x","undefined","picklistOptions","map","option","PicklistSearchInput","useState","setValue","toggleExpand","expanded","setExpand","placeholder","onChange","onKeyUp","searchInput","filteredOptions","text","setPicklistOptions","MultiSelectContainer","setExpanded","originalPicklistData","setOriginalPicklistData","picklistRef","useRef","useEffect","fetchData","then","data","catch","err","a","category_list","_id","imgURL","itemList","__v","category","document","addEventListener","current","contains","join","ref","isExpanded","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"yTAwBeA,MArBf,SAAsBC,GACpB,IAAoBC,EAIpB,OACE,qBAAKC,UAAU,gBAAf,SACE,wBAAOC,QAASH,EAAMI,YAAtB,UACE,uBACEC,KAAK,WACLC,MAAON,EAAMM,MACbC,KAAMP,EAAMM,MACZE,eAAgBR,EAAMS,QACtBC,GAAIV,EAAMM,SAZEL,EAcFD,EAAMM,MAbfL,EAAIU,QAAQ,OAAO,SAACC,GAAD,OAAOA,EAAEC,wB,MCsCxBC,MAvCf,SAA2Bd,GACzB,IAAQS,EAAwBT,EAAxBS,QAASM,EAAef,EAAfe,WAEXC,EAAuB,SAACC,GAC5BC,QAAQC,IAAI,SAEZ,IAAIC,EAASH,EAAEG,OACX,YAAIA,EAAOC,WAAWC,SAAS,kBAGjCL,EAAEG,OAAOX,SAAWQ,EAAEG,OAAOX,QAC7BS,QAAQC,KAAKF,EAAEG,OAAOX,UAHtBW,EAASH,EAAEG,OAAOG,WAKpB,IAAMC,EAAcJ,EAAOK,WAAWnB,MAGtC,GAAIG,EAAQa,SAASE,GACnBT,EAAWN,EAAQiB,QAAO,SAACC,GAAD,OAAOA,IAAMH,UAClC,CACL,QAAiBI,IAAdJ,EAAyB,OAC5BT,EAAW,GAAD,mBAAKN,GAAL,CAAce,OAgB5B,OAAO,qBAAKtB,UAAU,qBAAf,UAXLgB,QAAQC,IAAInB,EAAM6B,iBACX7B,EAAM6B,gBAAgBC,KAAI,SAACC,GAAD,OAC/B,cAAC,EAAD,CAEEzB,MAAOyB,EACP3B,YAAaY,EACbP,QAASA,EAAQa,SAASS,IAHrBA,U,MCQEC,MArCf,SAA6BhC,GAC3B,MAA0BiC,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc4B,EAAd,KAEA,SAASC,IACHnC,EAAMoC,UACRpC,EAAMqC,WAAU,GAiBpB,OACE,qBAAKnC,UAAU,kCAAf,SACE,uBACEG,KAAK,OACLH,UAAU,iBACVI,MAASA,EACTgC,YAAY,uBACZC,SAXN,SAAsBtB,GACpBiB,EAASjB,EAAEG,OAAOd,QAWdH,QAASgC,EACTK,QAtBN,SAAoBvB,GAClBkB,IACA,IAAMM,EAAcxB,EAAEG,OAAOd,MACvBoC,EAAkB1C,EAAM6B,gBAAgBH,QAAO,SAACiB,GAAD,OACnDA,EAAKrB,SAASmB,MAEhBzC,EAAM4C,mBAAmBF,S,MCuFdG,MApGf,WACE,MAAgCZ,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBU,EAAjB,KACA,EAA8Bb,mBAAS,IAAvC,mBAAOxB,EAAP,KAAgBM,EAAhB,KACA,EAAwDkB,mBAAS,IAAjE,mBAAOc,EAAP,KAA6BC,EAA7B,KACA,EAA8Cf,mBAAS,IAAvD,mBAAOJ,EAAP,KAAwBe,EAAxB,KACMK,EAAcC,mBAEpBC,qBAAU,WACRC,IACGC,MAAK,SAACC,GACLN,EAAwBM,GACxBV,EAAmBU,MAEpBC,OAAM,SAACC,GAAD,OAAStC,QAAQC,IAAIqC,QAC7B,IAEH,IAAMJ,EAAS,uCAAG,4BAAAK,EAAA,6DAiDhBH,GAhDIA,EAAO,CACTI,cAAe,CACb,CACEC,IAAK,2BACLpD,KAAM,UACNqD,OAAQ,mBACRC,SAAU,GACVC,IAAK,GAEP,CACEH,IAAK,2BACLpD,KAAM,SACNqD,OAAQ,mBACRC,SAAU,GACVC,IAAK,GAEP,CACEH,IAAK,2BACLpD,KAAM,kBACNqD,OAAQ,mBACRC,SAAU,GACVC,IAAK,GAEP,CACEH,IAAK,2BACLpD,KAAM,SACNqD,OAAQ,mBACRC,SAAU,GACVC,IAAK,GAEP,CACEH,IAAK,2BACLpD,KAAM,YACNqD,OAAQ,mBACRC,SAAU,GACVC,IAAK,GAEP,CACEH,IAAK,2BACLpD,KAAM,UACNqD,OAAQ,mBACRC,SAAU,GACVC,IAAK,MAMCJ,cAAc5B,KAAI,SAACiC,GAAD,OAAcA,EAASxD,QAjDrC,kBAkDT+C,GAlDS,2CAAH,qDA6Df,OARAH,qBAAU,WACRa,SAASC,iBAAiB,aAAa,SAAChD,GACjCgC,EAAYiB,QAAQC,SAASlD,EAAEG,SAClC0B,GAAY,SAMhB,qCACE,qBAAK5C,UAAU,UAAf,SAA0BO,EAAQ2D,KAAK,QACvC,sBAAKlE,UAAU,yBAAyBmE,IAAKpB,EAA7C,UACE,cAAC,EAAD,CACEqB,WAAYlC,EACZC,UAAWS,EACXjB,gBAAiBkB,EACjBH,mBAAoBA,EACpBR,SAAUA,IAEXA,EACC,cAAC,EAAD,CACE3B,QAASA,EACTM,WAAYA,EACZc,gBAAiBA,IAEjB,YCxFG0C,MARf,WACE,OACE,qBAAKrE,UAAU,MAAf,SACE,cAAC,EAAD,OCFNsE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASW,eAAe,W","file":"static/js/main.5923f23b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./PicklistItem.scss\";\n\nfunction PicklistItem(props) {\n  const capitalize = (str) => {\n    return str.replace(/^\\w/, (c) => c.toUpperCase());\n  };\n\n  return (\n    <div className=\"picklist-item\">\n      <label onClick={props.toggleCheck}>\n        <input\n          type=\"checkbox\"\n          value={props.value}\n          name={props.value}\n          defaultChecked={props.checked}\n          id={props.value}\n        />\n        {capitalize(props.value)}\n      </label>\n    </div>\n  );\n}\n\nexport default PicklistItem;\n","import React from \"react\";\nimport PicklistItem from \"./PicklistItem\";\nimport \"./PicklistContainer.scss\";\n\nfunction PicklistContainer(props) {\n  const { checked, setChecked } = props;\n\n  const findOrAddCheckedItem = (e) => {\n    console.log(\"Fired\")\n    // Check if selected element is the parent node of the checkbox/label. If not, ascend until parent node is selected.\n    let target = e.target;\n    if(![...target.classList].includes(\"picklist-item\")) {\n      target = e.target.parentNode;\n    } else {\n      e.target.checked = !e.target.checked;\n      console.log(!e.target.checked)\n    }\n    const targetValue = target.firstChild.value;\n\n    // Check if the value is already checked. Toggle the indicator if so.\n    if (checked.includes(targetValue)) {\n      setChecked(checked.filter((x) => x !== targetValue));\n    } else {\n      if(targetValue===undefined) return;\n      setChecked([...checked, targetValue]);\n    }\n  };\n\n  const renderPicklistOptions = () => {\n    console.log(props.picklistOptions);\n    return props.picklistOptions.map((option) => (\n      <PicklistItem\n        key={option}\n        value={option}\n        toggleCheck={findOrAddCheckedItem}\n        checked={checked.includes(option)}\n      />\n    ));\n  };\n\n  return <div className=\"picklist-container\">{renderPicklistOptions()}</div>;\n}\n\nexport default PicklistContainer;\n","import React, { useState } from \"react\";\nimport \"./PicklistSearchInput.scss\";\n\nfunction PicklistSearchInput(props) {\n  const [value, setValue] = useState('');\n\n  function toggleExpand() {\n    if(!props.expanded) {\n      props.setExpand(true);\n    }\n  }\n\n  function filterList(e) {\n    toggleExpand();\n    const searchInput = e.target.value;\n    const filteredOptions = props.picklistOptions.filter((text) =>\n      text.includes(searchInput)\n    );\n    props.setPicklistOptions(filteredOptions);\n  }\n\n  function handleChange(e) {\n    setValue(e.target.value)\n  }\n\n  return (\n    <div className=\"picklist-search-input-container\">\n      <input\n        type=\"text\"\n        className=\"picklist-input\"\n        value = {value}\n        placeholder=\"Search For Option(s)\"\n        onChange={handleChange}\n        onClick={toggleExpand}\n        onKeyUp={filterList}\n      />\n    </div>\n  );\n}\n\nexport default PicklistSearchInput;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PicklistContainer from \"./PicklistContainer\";\nimport PicklistSearchInput from \"./PicklistSearchInput\";\nimport \"./MultiSelectContainer.scss\";\n\nfunction MultiSelectContainer() {\n  const [expanded, setExpanded] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [originalPicklistData, setOriginalPicklistData] = useState([]);\n  const [picklistOptions, setPicklistOptions] = useState([]);\n  const picklistRef = useRef();\n\n  useEffect(() => {\n    fetchData()\n      .then((data) => {\n        setOriginalPicklistData(data);\n        setPicklistOptions(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const fetchData = async () => {\n    let data = {\n      category_list: [\n        {\n          _id: \"61a855d0ce500241198426bd\",\n          name: \"Fantasy\",\n          imgURL: \"/images/test.jpg\",\n          itemList: [],\n          __v: 0,\n        },\n        {\n          _id: \"61a855d0ce500241198426c0\",\n          name: \"Comedy\",\n          imgURL: \"/images/test.jpg\",\n          itemList: [],\n          __v: 0,\n        },\n        {\n          _id: \"61a855d0ce500241198426be\",\n          name: \"Science Fiction\",\n          imgURL: \"/images/test.jpg\",\n          itemList: [],\n          __v: 0,\n        },\n        {\n          _id: \"61a855d0ce500241198426bf\",\n          name: \"Horror\",\n          imgURL: \"/images/test.jpg\",\n          itemList: [],\n          __v: 0,\n        },\n        {\n          _id: \"61a855d0ce500241198426c2\",\n          name: \"Dystopian\",\n          imgURL: \"/images/test.jpg\",\n          itemList: [],\n          __v: 0,\n        },\n        {\n          _id: \"61a855d0ce500241198426c1\",\n          name: \"Fiction\",\n          imgURL: \"/images/test.jpg\",\n          itemList: [],\n          __v: 0,\n        },\n      ],\n    };\n    // const res = await fetch(\"http://localhost:3000/categories/api\");\n    // let data = await res.json();\n    data = data.category_list.map((category) => category.name);\n    return data;\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", (e) => {\n      if (!picklistRef.current.contains(e.target)) {\n        setExpanded(false);\n      }\n    });\n  });\n\n  return (\n    <>\n      <div className=\"checked\">{checked.join(\", \")}</div>\n      <div className=\"multi-select-container\" ref={picklistRef}>\n        <PicklistSearchInput\n          isExpanded={expanded}\n          setExpand={setExpanded}\n          picklistOptions={originalPicklistData}\n          setPicklistOptions={setPicklistOptions}\n          expanded={expanded}\n        />\n        {expanded ? (\n          <PicklistContainer\n            checked={checked}\n            setChecked={setChecked}\n            picklistOptions={picklistOptions}\n          />\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default MultiSelectContainer;\n","import \"./App.scss\";\nimport MultiSelectContainer from \"./components/MultiSelectContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MultiSelectContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}